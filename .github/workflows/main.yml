name: Node.js CI/CD

on:
  push:
    branches: 
      - '**'  # Toutes les branches
  pull_request:
    branches:
      - '**'  # Toutes les branches
  workflow_dispatch:  # Déclenchement manuel

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest  # Utilisation d'un runner hébergé par GitHub; changez en 'self-hosted' si nécessaire

    strategy:
      matrix:
        node-version: [16.x, 18.x]  # Tester sur plusieurs versions de Node.js

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Run 'npm audit fix' to address vulnerabilities (non-breaking changes only)
      - name: Fix Vulnerabilities
        run: npm audit fix

      # Optionally, force-fix remaining vulnerabilities if necessary (use with caution)
      - name: Force Fix Vulnerabilities
        run: npm audit fix --force
        continue-on-error: true  # Allows the workflow to proceed even if this step fails

      - name: Lint Code
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Generate Code Coverage
        run: npm run coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/

  deploy:
    name: Deploy to Production
    needs: build-and-test
    runs-on: self-hosted
    if: >
      github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'

      # Install dependencies and fix vulnerabilities
      - name: Install Dependencies
        run: npm install

      - name: Fix Vulnerabilities
        run: npm audit fix

      # Force fix remaining vulnerabilities (optional)
      - name: Force Fix Vulnerabilities
        run: npm audit fix --force
        continue-on-error: true  # Allows the deployment to continue even if this step fails

      - name: Build Project
        run: npm run build

      - name: Deploy with PM2
        env:
          PM2_HOME: /home/runner/.pm2
        run: |
          pm2 stop app-name || true
          pm2 start app.js --name app-name --watch
          pm2 save

      - name: Notify Deployment Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.issues.createComment({
              issue_number: 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Déploiement en production réussi !'
            })
