name: Node.js CI/CD

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch: 

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Fix Vulnerabilities
        run: npm audit fix
        continue-on-error: true

      - name: Force Fix Vulnerabilities (if needed)
        run: npm audit fix --force
        continue-on-error: true

  deploy:
    name: Deploy to Production
    needs: build-and-test
    runs-on: self-hosted
    if: >
      github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Fix Vulnerabilities
        run: npm audit fix
        continue-on-error: true

      - name: Force Fix Vulnerabilities (if needed)
        run: npm audit fix --force
        continue-on-error: true

      # Lancer l'application en arrière-plan avec nohup pour éviter le blocage
      - name: Start Server in Background
        run: nohup node app.js > output.log 2>&1 &

      - name: Notify Deployment Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.issues.createComment({
              issue_number: 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Déploiement en production réussi !'
            })
